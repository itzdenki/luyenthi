# Generated by Django 5.2.4 on 2025-08-03 15:47

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import quizapp.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=150, verbose_name='Họ và Tên')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('phone_number', models.CharField(blank=True, max_length=15, verbose_name='Số điện thoại')),
                ('role', models.CharField(choices=[('STUDENT', 'Học sinh'), ('TEACHER', 'Giáo viên')], default='STUDENT', max_length=50)),
                ('school', models.CharField(blank=True, max_length=255, verbose_name='Trường')),
                ('school_class', models.CharField(blank=True, max_length=50, verbose_name='Lớp')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Ngày Sinh')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Tiêu đề kỳ thi')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Mô tả')),
                ('subject', models.CharField(choices=[('MATH', 'Toán'), ('PHYSICS', 'Vật lý'), ('CHEMISTRY', 'Hóa học'), ('BIOLOGY', 'Sinh học'), ('HISTORY', 'Lịch sử'), ('GEOGRAPHY', 'Địa lí'), ('CIVIC_EDUCATION', 'Giáo dục công dân'), ('ENGLISH', 'Tiếng Anh'), ('TSA', 'Đánh giá tư duy (TSA)'), ('OTHER', 'Môn khác')], default='OTHER', max_length=20, verbose_name='Môn học (cho cấu trúc chuẩn)')),
                ('code', models.CharField(blank=True, default=quizapp.models.generate_exam_code, max_length=8, unique=True, verbose_name='Mã bài thi')),
                ('duration_minutes', models.PositiveIntegerField(default=50, verbose_name='Thời gian làm bài (phút)')),
                ('is_custom', models.BooleanField(default=False, verbose_name='Cấu trúc tùy chỉnh')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exams', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExamSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Tiêu đề phần')),
                ('question_type', models.CharField(choices=[('SINGLE', 'Trắc nghiệm - Chọn 1'), ('MULTIPLE', 'Trắc nghiệm - Chọn nhiều'), ('TRUE_FALSE', 'Đúng / Sai'), ('FILL_IN_BLANK', 'Điền vào chỗ trống'), ('MATCHING', 'Ghép đôi')], max_length=20, verbose_name='Loại câu hỏi')),
                ('question_count', models.PositiveIntegerField(default=10, verbose_name='Số lượng câu')),
                ('points_per_question', models.FloatField(default=0.25, verbose_name='Điểm mỗi câu')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Thứ tự phần')),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='quizapp.exam')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Nội dung câu hỏi / Hướng dẫn')),
                ('question_type', models.CharField(choices=[('SINGLE', 'Trắc nghiệm - Chọn 1'), ('MULTIPLE', 'Trắc nghiệm - Chọn nhiều'), ('TRUE_FALSE', 'Đúng / Sai'), ('FILL_IN_BLANK', 'Điền vào chỗ trống'), ('MATCHING', 'Ghép đôi')], default='SINGLE', max_length=20, verbose_name='Loại câu hỏi')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Thứ tự trong phần')),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='quizapp.exam')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='MatchPair',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prompt', models.CharField(max_length=255, verbose_name='Vế ghép (Prompt)')),
                ('answer', models.CharField(max_length=255, verbose_name='Vế trả lời (Answer)')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_pairs', to='quizapp.question')),
            ],
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=500, verbose_name='Nội dung lựa chọn / Đáp án')),
                ('is_correct', models.BooleanField(default=False, verbose_name='Là đáp án đúng?')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='quizapp.question')),
            ],
        ),
        migrations.CreateModel(
            name='ReadingPassage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Tiêu đề Ngữ liệu')),
                ('content', models.TextField(verbose_name='Nội dung Ngữ liệu')),
                ('order', models.PositiveIntegerField(default=1, verbose_name='Thứ tự Ngữ liệu (1 hoặc 2)')),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='passages', to='quizapp.exam')),
            ],
            options={
                'ordering': ['order'],
                'unique_together': {('exam', 'order')},
            },
        ),
        migrations.AddField(
            model_name='question',
            name='passage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='quizapp.readingpassage', verbose_name='Ngữ liệu Đọc hiểu (nếu có)'),
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(default=0.0, verbose_name='Điểm số')),
                ('total', models.IntegerField(verbose_name='Tổng số câu')),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quizapp.exam')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
